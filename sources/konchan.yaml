meta:
  name: "konachan.com"
  type: "assets"

display:
  columnCount: 5
  aspectRatio: 1.65

url:
  home: { link: "https://konachan.com/post?${pageCount}page=${page}&tags=${rating}" }
  search: { link: "https://konachan.com/post?${pageCount}page=${page}&tags=${rating}${tag}", tagConnector: "_" }

options:
  - {id: "rating", desc: "评级", items: [{desc: "safe", param: "rating%3Asafe+"}, {desc: "all", param: ""}, {desc: "questionable", param: "rating%3Aquestionable+"}, {desc: "explicit", param: "rating%3Aexplicit+"}]}
  - {id: "pageCount", desc: "每页数量", items: [{ desc: "50", param: "limit=50&" }, { desc: "20", param: "limit=20&" }, { desc: "80", param: "limit=80&"}]}

homePage: &HOMEPAGE
  onParseResult:
    list:
      getElements: { cssSelector: "#post-list-posts li" }
      foreach:
        coverUrl:
          get: { cssSelector: "a[class=thumb] img", attr: "src" }
        href:
          get: { cssSelector: "a[class=thumb]", attr: "href" }
          format:
            - concat: { start: "https://konachan.com", end: "" }
        tags:
          list:
            get: { cssSelector: "a[class=thumb] img", attr: "alt" }
            filter: { regex: "(?<=Tags:).*?(?=User:)", index: 0 }
            toList: { separator: " " }
        width:
          get: { cssSelector: "span[class=directlink-info]", text: "" }
          filter: { regex: '^\d+', index: 0 }
        height:
          get: { cssSelector: "span[class=directlink-info]", text: "" }
          filter: { regex: '^\d+ x (\d+)', index: 1 }
        id:
          get: { cssSelector: "", attr: "id" }
          format:
            - replaceAll: { from: "p", to: "" }

searchPage:
  *HOMEPAGE

detailPage:
  onParseResult:
    object:
      url:
        get: { cssSelector: "#image", attr: "src" }
      bigUrl:
        get: { cssSelector: "#highres", attr: "href" }
      rawUrl:
        get: { cssSelector: "#png", attr: "href" }
      tags:
        list:
          get: { cssSelector: "#image", attr: "alt" }
          toList: { separator: " " }
      width:
        get: { cssSelector: "a[class=thumb] img", attr: "width" }
      height:
        get: { cssSelector: "a[class=thumb] img", attr: "height" }
      id:
        get: { cssSelector: "#stats", text: "" }
        filter: { regex: "(?<=Id:).*?(?=Posted:)", index: 0 }
      author:
        get: { cssSelector: "#stats", text: "" }
        filter: { regex: "(?<=by ).*?(?=Size:)", index: 0 }
      dimensions:
        get: { cssSelector: "#stats", text: "" }
        filter: { regex: "(?<=Size: ).*?(?= )", index: 0 }
      source:
        get: { cssSelector: "[rel^='canonical']", attr: "href" }