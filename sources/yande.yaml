meta:
  name: "yande.re"
  type: "assets"

display:
  columnCount: 6
  aspectRatio: 1.65

url:
  home: {link: "https://yande.re/post?page=${page}" }
  search: {link: "https://yande.re/post?page=${page}&tags=${tag}", tagConnector: "_" }
  safeHome: { link: "https://yande.re/post?page=${page}&tags=rating%3Asafe" }
  safeSearch: { link: "https://yande.re/post?page=${page}&tags=rating%3Asafe+${tag}", tagConnector: "_" }


homePage: &HOMEPAGE
  onParseResult:
    list:
      getElements: { cssSelector: "#post-list-posts li" }
      foreach:
        coverUrl:
          get: { cssSelector: "a[class=thumb] img", attr: "src" }
        href:
          get: { cssSelector: "a[class=thumb]", attr: "href" }
          format:
            - concat: { start: "https://yande.re", end: "" }
        tags:
          list:
            get: { cssSelector: "a[class=thumb] img", attr: "alt" }
            filter: { regex: "(?<=Tags:).*?(?=User:)", index: 0 }
            toList: { separator: " " }
        width:
          get: { cssSelector: "a[class=thumb] img", attr: "width" }
        height:
          get: { cssSelector: "a[class=thumb] img", attr: "height" }
        id:
          get: { cssSelector: "", attr: "id" }
          format:
            - replaceAll: { from: "p", to: "" }

searchPage:
  *HOMEPAGE

detailPage:
  onParseResult:
    object:
      url:
        get: { cssSelector: "#image", attr: "src" }
      tags:
        list:
          get: { cssSelector: "#image", attr: "alt" }
          toList: { separator: " " }
      width:
        get: { cssSelector: "a[class=thumb] img", attr: "width" }
      height:
        get: { cssSelector: "a[class=thumb] img", attr: "height" }
      id:
        get: { cssSelector: "#stats", text: "" }
        filter: { regex: "(?<=Id:).*?(?=Posted:)", index: 0 }
      author:
        get: { cssSelector: "#stats", text: "" }
        filter: { regex: "(?<=by ).*?(?=Size:)", index: 0 }
#      fileSize:
#        get: { cssSelector: "#stats", text: "" }
#        filter: { regex: "(?<=Size: ).*?(?=Rating:)", index: 0 }
      dimensions:
        get: { cssSelector: "#stats", text: "" }
        filter: { regex: "(?<=Size: ).*?(?= )", index: 0 }
      source:
        get: { cssSelector: "[rel^='canonical']", attr: "href" }
      rawUrl:
        get: { cssSelector: "#highres", attr: "href" }